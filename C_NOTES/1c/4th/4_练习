
1. 封装一个函数，判断一个数是否为质数.并且输出1 -- 100之间的质数

    int prim(int n);

    质数:
        Yes:
            return 0
        No:
            return -1;
2. 用递归求n!

3. 封装函数递归实现任意进制的输出

4.函数练习
    int a[10];
    接受整数存入数组    初始化数组的函数随机初始化)
     5 3 7 8 9
    找出其中最大值和最小值  两个函数
     max: 9  min: 3
    数组的反转              一个函数
     9 8 7 3 5
    数组的循环左移/右移     两个函数
        9 8 7 3 5
    左移: 8 7 3 5 9
    右移: 5 9 8 7 3

    复制数组函数

    打印数组函数


5. 实现字符串操作函数
    strlen              返回字符串的长度
        int my_strlen(char s[]);
    strcpy              字符串拷贝
        void my_strcpy(char dst[], char src[]);
    strncpy             指定长度拷贝字符串
        void my_strncpy(char dst[], char src[], int n);
    strcat              字符串连接
        void my_strcat(char dst[], char src[]);
    strncat             指定字符串长度连接
        void my_strncat(char dst[], char src[], int n);
    strcmp              字符串比较  
            相等返回0 大于返回正数 小于返回负数
        int my_strcmp(char s1[], char s2[]);
    strncmp             指定字符串长度比较
        int my_strncmp(char s1[], char s2[], int n);
    strncasecmp         指定字符串长度忽略大小写比较
        int my_strncasecmp(char s1[], char s2[], int n);
    strchr              在字符串中查找字符 返回查找到第一个结果
        int my_strchr(char s[], char c);

    /******************************************************/
    strrchr             在字符串中查找字符,返回最后一个结果
        int my_strrchr(char s[], char c);
    strstr              在字符串中查找字符串 返回在源字符串中的位置
        int my_strstr(char s[], char key[]);

    




