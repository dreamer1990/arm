
链表

1. 线性结构
	线性结构是一个数据元素的有序（次序）集  。
	线性结构的基本特征:
	（1）存在唯一的一个被称作“第一个”的数据元素
	（2）存在唯一的一个被称作“最后一个”的数据元素
	（3）除第一个外，集合中的每个数据元素均只有 一个前驱
	（4）除最后一个外，集合中的每个数据元素均只有一个后继

    eg: 1 -> 2 -> 3 -> 4 -> 5 -> NULL;

2. 线性表的类型定义
	线性表：n个数据元素组成的有限序列。表示为（a1，a2，…，ai，ai+1，…，an)

	逻辑特征：
		1<i<n时
		ai的直接前驱是ai-1，a1无直接前驱
		ai的直接后继是ai+1，an无直接后继
		元素同构，且不能出现缺项
	线性表的长度：表中元素的个数n(n>=0)，n=0 空表。
	位序：元素ai在表中的位置数i 。

3. 线性表的顺序表示和实现（动态数组类似）
	线性表的顺序表示：
        用一组地址连续的储存单元依次储存线性表的数据元素。
	
	顺序表：
	定义：顺序储存结构表示的线性表。
	元素地址计算方法：
	LOC(ai+1) = LOC(ai) + L
	LOC(ai) = LOC(a1) + (i-1)*L
	其中：
	L—一个元素占用的存储单元个数
	LOC(ai)—线性表第i个元素的地址

	特点：
	实现逻辑上相邻—物理地址相邻
	实现随机存取
	实现：可用C语言的一维数组实现

4. 顺序存储结构的优缺点
	优点
		逻辑相邻，物理相邻
		可随机存取任一元素
		存储空间使用紧凑
	缺点
	插入、删除操作需要移动大量的元素
	预先分配空间需按最大空间分配，利用不充分
	表容量难以扩充


5. 线性表的链式存储结构
	
	以线性表中第一个数据元素的存储地址作为线性表的地址，称作线性表的头指针。

	有时为了操作方便，在第一个结点之前虚加一个“头结点”，以指向头结点的指针为链表的头指针。

	单链表是一种顺序存取的结构，为找第 i 个数据元素，必须先找到第 i-1 个数据元素。

6. 单链表的优缺点

	单链表的优点
		它是一种动态结构，整个存储空间为多个链表共用
		不需预先分配空间
		插入、删除操作方便
	单链表的缺点
		指针占用额外存储空间
		不能随机存取，查找速度慢



 有头 无头 /  循环  不循环 / 单向 双向  / 有序 无序   

    2 * 2 * 2 * 2 = 16种

7. 头结点和头指针

    头指针: 以线性表中第一个数据元素的存储地址作为线性表的地址，称作线性表的头指针。头指针是必须的。

    头结点: 指向头指针。它的数据域中一般不放数据。头结点不是链表必须的。





