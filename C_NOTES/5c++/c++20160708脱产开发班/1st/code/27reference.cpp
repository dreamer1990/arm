#include <iostream>

using namespace std;


/*
 *
 *    ① 使用引用类型就不必在swap函数中声明形参是指针变量。指针变量要另外开辟内存单元，其内容是地址。而引用变量不是一个独立的变量，不单独占内存单元，在例6.20中引用变量a和b的值的数据类型与实参相同，都是整型。
 *    ② 在main函数中调用swap函数时，实参不必用变量的地址(在变量名的前面加&)，而直接用变量名。系统向形参传送的是实参的地址而不是实参的值。
 *    
 *    引用不仅可以用于变量，也可以用于对象。例如实参可以是一个对象名，在虚实结合时传递对象的起始地址。这会在以后介绍。
 *    当看到&a这样的形式时，怎样区别是声明引用变量还是取地址的操作呢？当&a的前面有类型符时（如int &a），它必然是对引用的声明；如果前面无类型符（如cout<<&a），则是取变量的地址。
 *    
 */


//引用作为函数的形参

int swap(int &a, int &b)
{
    //交换两个值
    a ^= b;
    b ^= a;
    a ^= b;
}
int main(void)
{
    int a = 3;
    int b = 4;
    
    cout << "a = " << a << " b = " << b << endl;

    //交换
    swap(a, b);

    cout << "a = " << a << " b = " << b << endl;

    return 0;
}









