#include <iostream>
using namespace std;

#define PI 3.1415926


/*
 *15. 有默认参数的函数
 *
 *    一般情况下，在函数调用时形参从实参那里取得值，因此实参的个数应与形参相同。有时多次调用同一函数时用同样的实参，C++提供简单的处理办法，给形参一个默认值，这样形参就不必一定要从实参取值了。如有一函数声明
 *    float area(float r = 6.5);
 *    指定r的默认值为6.5，如果在调用此函数时，确认r的值为6.5，则可以不必给出实参的值，如
 *    area( ); //相当于area(6.5);
 *    如果不想使形参取此默认值，则通过实参另行给出。如
 *    
 *    area(7.5);    //形参得到的值为7.5，而不是6.5
 *    这种方法比较灵活，可以简化编程，提高运行效率。
 *
 */

//带默认参数的函数
double area(double r = 0.5)
{
    return  PI * r * r;
}

int main(void)
{

    int r = 5;

    //没有使用默认的参数  传递的参数优先
    cout << "area(5):  " << area(r) << endl;

    //没有提供参数  使用默认的参数
    cout << "area(): " << area() << endl;

    return 0;
}
