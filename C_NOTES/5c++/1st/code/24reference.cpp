#include <iostream>

using namespace std;


//引用
int main(void)
{
    int a = 3;

    
    //注意： 在上述声明中，&是引用声明符，并不代表地址。不要理解为“把a的值赋给b的地址”。声明变量b为引用类型，并不需要另外开辟内存单元来存放b的值。b和a占内存中的同一个存储单元，它们具有同一地址。声明b是a的引用，可以理解为： 使变量b具有变量a的地址。见图6.26，如果a的值是20，则b的值也是20。
    
    //定义引用b 指向a   b是a的别名
    int &b = a;


    //在声明一个引用类型变量时，必须同时使之初始化，即声明它代表哪一个变量。在声明变量b是变量a的引用后，在它们所在函数执行期间，该引用类型变量b始终与其代表的变量a相联系，不能再作为其他变量的引用(别名)。下面的用法不对： 
    //声明引用的时候必须初始化;    
    int &c = a;


    //引用a 和 b指向同一个内存空间
    cout << "&a = " << &a << "  &b = " << &b << endl;
    cout << "a = " << a << " b = " << b << endl;
    
    return 0;
}
